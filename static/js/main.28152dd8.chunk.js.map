{"version":3,"sources":["static/logo.svg","config/history.ts","config/axios.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/redux/actions/todos.ts","components/redux/actions/actionTypes.ts","components/redux/containers/TodoInputContainer.ts","components/Tomatoes/InputDescription.tsx","components/redux/containers/TodoItemContainers.ts","components/Todos/Todos.tsx","components/redux/containers/TodosContainers.ts","components/Tomatoes/CountDown.tsx","components/Tomatoes/StartTomato.tsx","components/Tomatoes/Tomatoes.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoItem.tsx","components/Tomatoes/TomatoList.tsx","components/redux/containers/TomatoesContainers.ts","components/redux/actions/tomatoes.ts","components/Home/Logo.tsx","components/Statistics/Polygon.tsx","components/Statistics/TodoHistoryItem.tsx","components/redux/containers/TodoHistoryItemContainer.ts","components/Statistics/TodoHistoryList.tsx","components/Statistics/TodoHistory.tsx","components/redux/containers/TodoHistoryContainer.ts","components/Statistics/Statistics.tsx","components/redux/containers/StatisticsContainer.ts","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","components/redux/reducers/todos.ts","components/redux/reducers/tomatoes.ts","components/redux/reducers/index.ts","components/redux/store.ts","index.tsx"],"names":["module","exports","history","createBrowserHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","KeyCode","TodoInput","props","useState","description","setDescription","addTodo","a","async","post","data","resources","suffix","type","onClick","className","placeholder","value","onChange","e","target","onKeyUp","keyCode","enter","updateTodo","todo","payload","mapDispatchToProps","connect","state","todos","ownProps","TodoItem","editText","setEditText","params","put","id","resource","Icons","theme","deleted","Check","checked","completed","completed_at","Date","toUTCString","Editing","Text","onDoubleClick","editTodo","editing","Todos","initTodos","useEffect","get","newTodos","map","t","getTodos","unCompletedTodos","filter","key","CountDown","finishedTime","updateHasFinished","duration","getTime","timeNow","setTimeNow","countDown","min","Math","floor","sec","time","document","title","setInterval","clearInterval","width","style","StartTomato","startTomato","block","ETomatoes","InputDescription","unfinishedTomato","updateTomato","ended_at","addDescription","TomatoAction","hasFinished","setHasFinished","content","start_at","parse","started_at","showAbortConfirm","confirm","okText","okType","cancelText","onOk","abortTomato","aborted","TomatoItem","tomato","format","TomatoList","finishedTomatoes","dates","Object","keys","sort","b","splice","date","tomatoes","length","Tomatoes","addTomato","initTomatoes","groupBy","getTomatoes","Logo","src","svg","alt","Polygon","chartData","totalFinishedCount","count","renderer","height","name","label","tickLine","opacity","position","color","TodoHistoryItem","updated_at","finished","updateTodoAsync","FinishedAction","DeletedAction","TodoHistoryList","dayOfWeek","getDay","day","TodoHistoryItemContainer","TabPane","TodoHistory","finishedTodos","dailyFinishedTodos","deletedTodos","dailyDeletedTodos","finishedDates","deletedDates","defaultActiveKey","tab","Statistics","dailyTodos","dailyFinishedTomatoes","TodoHistoryContainer","Home","account","setAccount","getMe","size","Login","password","setPassword","Group","prefix","Password","to","SignUp","passwordConfirmation","setPasswordConfirmation","compact","password_confirmation","App","exact","path","component","Boolean","window","location","hostname","match","action","combineReducers","store","createStore","reducers","devToolsEnhancer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28152dd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1a3cd3f9.svg\";","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import axios from \"axios\";\nimport history from \"./history\";\n\nconst appID = \"HsjvVF7uMwTNhonJVu7MgwAZ\";\nconst appSecret = \"zQYB3yzmQXW4AMvEjh36LM1j\";\nconst baseURL = \"https://gp-server.hunger-valley.com/\";\n\nconst instance = axios.create({\n  baseURL,\n  headers: {\n    \"t-app-id\": appID,\n    \"t-app-secret\": appSecret\n  }\n});\n\n// 添加请求拦截器\ninstance.interceptors.request.use(\n  config => {\n    const xToken = localStorage.getItem(\"x-token\");\n    if (xToken) {\n      config.headers[\"Authorization\"] = `Bearer ${xToken}`;\n    }\n    return config;\n  },\n  error => {\n    console.error(\"axios add request interceptor error\", error);\n    return Promise.reject(error);\n  }\n);\n\n// 添加响应拦截器\ninstance.interceptors.response.use(\n  response => {\n    if (response.headers[\"x-token\"]) {\n      localStorage.setItem(\"x-token\", response.headers[\"x-token\"]);\n    }\n    return response;\n  },\n  error => {\n    console.error(\"axios add response interceptor error\", error);\n    if (error.response.status === 401) {\n      history.push(\"/login\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import React, { useState, KeyboardEvent } from \"react\";\nimport { Input, Icon } from \"antd\";\nimport axios from \"../../config/axios\";\n\nimport \"./TodoInput.scss\";\nimport { ITodo } from \"./Todos\";\n\nenum KeyCode {\n  enter = 13\n}\n\ninterface ITodoInputProps {\n  addTodo: (payload: ITodo) => {};\n}\n\nconst TodoInput: React.FC<ITodoInputProps> = props => {\n  const [description, setDescription] = useState(\"\");\n\n  const addTodo = async () => {\n    if (!description) {\n      return;\n    }\n    try {\n      const response = await axios.post(\"todos\", { description });\n      props.addTodo(response.data.resources);\n    } catch (e) {\n      console.error(\"添加待办事项失败\", e);\n    }\n    setDescription(\"\");\n  };\n\n  const suffix = description ? (\n    <Icon type=\"enter\" onClick={addTodo} />\n  ) : (\n    <span />\n  );\n\n  const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === KeyCode.enter) {\n      addTodo();\n    }\n  };\n\n  return (\n    <div className=\"TodoInput\">\n      <Input\n        placeholder=\"请输入待办事项\"\n        suffix={suffix}\n        value={description}\n        onChange={e => {\n          setDescription(e.target.value || \"\");\n        }}\n        onKeyUp={onEnter}\n      />\n    </div>\n  );\n};\n\nexport default TodoInput;\n","import React, { useState, KeyboardEvent } from \"react\";\nimport { ITodo } from \"./Todos\";\nimport { Checkbox, Icon } from \"antd\";\n\nimport axios from \"../../config/axios\";\n\nimport \"./TodoItem.scss\";\n\ninterface ITodoItemProps {\n  updateTodo: (todo: ITodo) => {};\n  editTodo: (id: number) => {};\n}\n\nenum KeyCode {\n  enter = 13\n}\n\nconst TodoItem = (props: ITodo & ITodoItemProps) => {\n  const [editText, setEditText] = useState(props.description || \"\");\n\n  const toggleEditing = () => {\n    if (props.id) props.editTodo(props.id);\n  };\n\n  const keyUpHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (editText !== \"\" && e.keyCode === KeyCode.enter) {\n      updateTodo({ description: editText, id: props.id });\n    }\n  };\n\n  const updateTodo = async (params: ITodo) => {\n    try {\n      const response = await axios.put(`todos/${props.id}`, params);\n      props.updateTodo(response.data.resource);\n    } catch (e) {\n      console.error(\"更新待办事项失败\", e);\n    }\n  };\n\n  const Icons = (\n    <div className=\"iconWrapper\">\n      <Icon\n        type=\"enter\"\n        onClick={() => {\n          updateTodo({ description: editText, id: props.id });\n        }}\n      />\n      <Icon\n        type=\"delete\"\n        theme=\"filled\"\n        onClick={() => {\n          updateTodo({ deleted: true });\n        }}\n      />\n    </div>\n  );\n\n  const Check = (\n    <Checkbox\n      checked={props.completed}\n      onChange={e => {\n        updateTodo({\n          completed: e.target.checked,\n          id: props.id,\n          completed_at: new Date().toUTCString()\n        });\n      }}\n    />\n  );\n\n  const Editing = (\n    <div className=\"editing\">\n      <input\n        value={editText}\n        onChange={e => {\n          setEditText(e.target.value);\n        }}\n        onKeyUp={keyUpHandler}\n      />\n      {Icons}\n    </div>\n  );\n\n  const Text = (\n    <span className=\"text\" onDoubleClick={toggleEditing}>\n      {props.description}\n    </span>\n  );\n\n  const className =\n    \"TodoItem\" +\n    (props.editing ? \" editing\" : \"\") +\n    (props.completed ? \" completed\" : \"\");\n\n  return (\n    <div className={className}>\n      {Check}\n      {props.editing ? Editing : Text}\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"./actionTypes\";\nimport { ITodo } from \"../../Todos/Todos\";\n\nexport const addTodo = (todo: ITodo) => {\n  return {\n    type: ADD_TODO,\n    payload: todo\n  };\n};\n\nexport const initTodos = (todos: ITodo[]) => {\n  return {\n    type: INIT_TODOS,\n    payload: todos\n  };\n};\n\nexport const updateTodo = (todo: ITodo) => {\n  return {\n    type: UPDATE_TODO,\n    payload: todo\n  };\n};\n\nexport const editTodo = (id: number) => {\n  return {\n    type: EDIT_TODO,\n    payload: id\n  };\n};\n","export const ADD_TODO = \"ADD_TODO\";\nexport const INIT_TODOS = \"INIT_TODOS\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\n\nexport const ADD_TOMATO = \"ADD_TOMATO\";\nexport const INIT_TOMATOES = \"INIT_TOMATOES\";\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\";\n","import { connect } from \"react-redux\";\nimport TodoInput from \"../../Todos/TodoInput\";\nimport { addTodo } from \"../actions/todos\";\n\nconst mapStateToProps = (state = { todos: [] }, ownProps = {}) => {\n  return { todos: state.todos, ...ownProps };\n};\n\nconst mapDispatchToProps = {\n  addTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n","import React, { KeyboardEvent, useState } from \"react\";\nimport { Input } from \"antd\";\nimport { ITomato } from \"./Tomatoes\";\nimport axios from \"../../config/axios\";\n\nenum KeyCode {\n  enter = 13\n}\n\ninterface IInputDescriptionProps {\n  unfinishedTomato: ITomato;\n  updateTomato: (tomato: ITomato) => void;\n}\n\nconst InputDescription: React.FC<IInputDescriptionProps> = props => {\n  const { unfinishedTomato, updateTomato } = props;\n  const [description, setDescription] = useState(\"\");\n\n  const addDescription = async () => {\n    const ended_at = new Date();\n    try {\n      const response = await axios.put(`tomatoes/${unfinishedTomato.id}`, {\n        description,\n        ended_at\n      });\n      updateTomato(response.data.resource);\n      setDescription(\"\");\n    } catch (e) {\n      console.error(\"给番茄任务添加描述失败\", e);\n    }\n  };\n\n  const onKeyUp = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (description !== \"\" && e.keyCode === KeyCode.enter) {\n      addDescription();\n    }\n  };\n\n  return (\n    <>\n      <Input\n        value={description}\n        placeholder=\"请输入您刚刚完成的任务\"\n        onChange={e => {\n          setDescription(e.target.value);\n        }}\n        onKeyUp={onKeyUp}\n      />\n    </>\n  );\n};\n\nexport default InputDescription;\n","import { connect } from \"react-redux\";\nimport TodoItem from \"../../Todos/TodoItem\";\nimport { editTodo, updateTodo } from \"../actions/todos\";\n\nconst mapStateToProps = (state = { todos: [] }, ownProps = {}) => {\n  return { todos: state.todos, ...ownProps };\n};\n\nconst mapDispatchToProps = {\n  editTodo,\n  updateTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","import React, { useEffect } from \"react\";\nimport TodoInput from \"../redux/containers/TodoInputContainer\";\n\nimport axios from \"../../config/axios\";\n\nimport \"./Todos.scss\";\nimport { AxiosResponse } from \"axios\";\nimport TodoItem from \"../redux/containers/TodoItemContainers\";\n\ninterface IGetTodos {\n  resources: ITodo[];\n}\n\nexport interface IAddTodoParams {\n  description: string;\n}\n\ninterface ITodosProps {\n  todos: ITodo[];\n  initTodos: (todos: ITodo[]) => {};\n}\n\nexport interface ITodo {\n  description?: string;\n  id?: number;\n  completed?: boolean;\n  editing?: boolean;\n  deleted?: boolean;\n  completed_at?: string;\n  updated_at?: number;\n  finished?: boolean;\n}\n\nconst Todos: React.FC<ITodosProps> = props => {\n  const { todos, initTodos } = props;\n  useEffect(() => {\n    const getTodos = async () => {\n      try {\n        const response: AxiosResponse<IGetTodos> = await axios.get(\"todos\");\n        const newTodos: ITodo[] = response.data.resources.map(t => ({\n          ...t,\n          editing: false\n        }));\n        initTodos(newTodos);\n      } catch (e) {\n        console.error(\"获取待办事项失败\", e);\n      }\n    };\n    getTodos();\n  }, [initTodos]);\n\n  const unDeletedTodos = todos.filter(todo => !todo.deleted);\n  const unCompletedTodos = unDeletedTodos.filter(todo => !todo.completed);\n\n  return (\n    <div className=\"Todos\" id=\"Todos\">\n      <TodoInput />\n      <div className=\"TodoList\">\n        {unCompletedTodos.map(todo => (\n          <TodoItem key={todo.id} {...todo}></TodoItem>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n","import { connect } from \"react-redux\";\nimport Todos from \"../../Todos/Todos\";\nimport { initTodos } from \"../actions/todos\";\n\nconst mapStateToProps = (state = { todos: [] }, ownProps = {}) => {\n  return {\n    todos: state.todos,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  initTodos\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./CountDown.scss\";\n\ninterface ICountDownProps {\n  finishedTime: number;\n  duration: number;\n  updateHasFinished: () => void;\n}\n\nconst CountDown: React.FC<ICountDownProps> = props => {\n  const { finishedTime, updateHasFinished, duration } = props;\n  const [timeNow, setTimeNow] = useState(new Date().getTime());\n\n  const countDown = finishedTime - timeNow;\n  const min = Math.floor(countDown / 1000 / 60);\n  const sec = Math.floor((countDown / 1000) % 60);\n  const time = `${min >= 10 ? min : \"0\" + min}:${sec >= 10 ? sec : \"0\" + sec}`;\n  document.title = `${time} - 番茄土豆`;\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTimeNow(timeNow + 1000);\n      if (countDown <= 1000) {\n        document.title = `番茄土豆`;\n        updateHasFinished();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [countDown, time, timeNow, updateHasFinished]);\n\n  const width = `${(1 - countDown / duration) * 100}%`;\n\n  return (\n    <div className=\"CountDown\">\n      <span>{time}</span>\n      <div className=\"progress\" style={{ width }}></div>\n    </div>\n  );\n};\n\nexport default CountDown;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IStartTomatoProps {\n  startTomato: () => void;\n}\n\nconst StartTomato: React.FC<IStartTomatoProps> = props => {\n  const { startTomato } = props;\n  return (\n    <Button\n      block\n      onClick={() => {\n        startTomato();\n      }}\n    >\n      开始番茄\n    </Button>\n  );\n};\n\nexport default StartTomato;\n","import React, { useEffect } from \"react\";\nimport axios from \"../../config/axios\";\n\nimport \"./Tomatoes.scss\";\nimport TomatoAction from \"./TomatoAction\";\nimport TomatoList from \"./TomatoList\";\n\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nenum ETomatoes {\n  duration = 25 * 60 * 1000\n}\n\nexport interface ITomato {\n  aborted?: boolean;\n  created_at?: string;\n  description?: string;\n  duration?: number;\n  ended_at?: number;\n  extra?: object;\n  id?: number;\n  manually_created?: string;\n  started_at?: string;\n  updated_at?: string;\n  user_id?: number;\n}\n\ninterface ITomatoesProps {\n  tomatoes: ITomato[];\n  addTomato: (tomato: ITomato) => void;\n  initTomatoes: (tomatoes: ITomato[]) => void;\n  updateTomato: (tomato: ITomato) => void;\n}\n\nconst Tomatoes: React.FC<ITomatoesProps> = props => {\n  const { tomatoes, addTomato, initTomatoes, updateTomato } = props;\n\n  const startTomato = async () => {\n    try {\n      const response = await axios.post(\"tomatoes\", {\n        duration: ETomatoes.duration\n      });\n      addTomato(response.data.resource);\n    } catch (e) {\n      console.error(\"更新番茄闹钟失败\", e);\n    }\n  };\n\n  const unfinishedTomato = tomatoes.filter(\n    tomato => !tomato.description && !tomato.ended_at && !tomato.aborted\n  )[0];\n\n  const finishedTomatoes = groupBy(\n    tomatoes.filter(\n      tomato => tomato.description && tomato.ended_at && !tomato.aborted\n    ),\n    tomato => {\n      return format(new Date(tomato.started_at || 0), \"yyyy-MM-dd\");\n    }\n  );\n\n  useEffect(() => {\n    const getTomatoes = async () => {\n      try {\n        const response = await axios.get(\"tomatoes\");\n        initTomatoes(response.data.resources);\n      } catch (e) {\n        console.error(\"获取番茄闹钟列表失败\", e);\n      }\n    };\n    getTomatoes();\n  }, [initTomatoes]);\n\n  return (\n    <div className=\"Tomatoes\">\n      <TomatoAction\n        startTomato={startTomato}\n        unfinishedTomato={unfinishedTomato}\n        updateTomato={updateTomato}\n      />\n      <TomatoList finishedTomatoes={finishedTomatoes} />\n    </div>\n  );\n};\n\nexport default Tomatoes;\n","import React, { useState } from \"react\";\nimport { ITomato } from \"./Tomatoes\";\nimport CountDown from \"./CountDown\";\nimport StartTomato from \"./StartTomato\";\nimport InputDescription from \"./InputDescription\";\nimport { Icon, Modal } from \"antd\";\n\nimport axios from \"../../config/axios\";\n\nimport \"./TomatoAction.scss\";\n\ninterface ITomatoActionProps {\n  unfinishedTomato: ITomato;\n  updateTomato: (tomato: ITomato) => void;\n  startTomato: () => void;\n}\n\nconst TomatoAction: React.FC<ITomato & ITomatoActionProps> = props => {\n  const { unfinishedTomato, updateTomato, startTomato } = props;\n  const [hasFinished, setHasFinished] = useState(false);\n\n  let content = <div />;\n\n  if (!unfinishedTomato) {\n    content = <StartTomato startTomato={startTomato}></StartTomato>;\n  } else {\n    const start_at = Date.parse(unfinishedTomato.started_at || \"\");\n    const duration = unfinishedTomato.duration || 0;\n    const finishedTime = duration + start_at;\n    const timeNow = new Date().getTime();\n\n    const showAbortConfirm = () => {\n      return Modal.confirm({\n        title: \"您目前正在一个番茄工作时间中，要放弃这个番茄吗？\",\n        okText: \"放弃次番茄\",\n        okType: \"danger\",\n        cancelText: \"继续番茄任务\",\n        onOk() {\n          abortTomato();\n        }\n      });\n    };\n\n    const abortTomato = async () => {\n      try {\n        const response = await axios.put(`tomatoes/${unfinishedTomato.id}`, {\n          aborted: true\n        });\n        updateTomato(response.data.resource);\n        document.title = `番茄土豆`;\n      } catch (e) {\n        console.error(\"放弃番茄任务失败\", e);\n      }\n    };\n\n    if (timeNow - finishedTime > 0 || hasFinished) {\n      content = (\n        <div className=\"InputWrapper\">\n          <InputDescription\n            unfinishedTomato={unfinishedTomato}\n            updateTomato={updateTomato}\n          />\n          <Icon\n            type=\"close-circle\"\n            className=\"abort\"\n            onClick={showAbortConfirm}\n          />\n        </div>\n      );\n    } else {\n      const updateHasFinished = () => {\n        setHasFinished(true);\n      };\n\n      content = (\n        <div className=\"CountDownWrapper\">\n          <CountDown\n            duration={duration}\n            finishedTime={finishedTime}\n            updateHasFinished={updateHasFinished}\n          />\n          <Icon\n            type=\"close-circle\"\n            className=\"abort\"\n            onClick={showAbortConfirm}\n          />\n        </div>\n      );\n    }\n  }\n\n  return <div className=\"TomatoAction\">{content}</div>;\n};\n\nexport default TomatoAction;\n","import React from \"react\";\nimport { ITomato } from \"./Tomatoes\";\nimport { format } from \"date-fns\";\n\nimport \"./TomatoItem.scss\";\n\ninterface ITomatoItemProps {\n  tomato: ITomato;\n}\n\nconst TomatoItem: React.FC<ITomatoItemProps> = ({ tomato }) => {\n  const started_at = format(new Date(tomato.started_at || 0), \"HH:mm\");\n  const ended_at = format(new Date(tomato.ended_at || 0), \"HH:mm\");\n\n  return (\n    <div className=\"TomatoItem\">\n      <span className=\"time\">\n        {started_at} - {ended_at}\n      </span>\n      <span className=\"description\">{tomato.description}</span>\n    </div>\n  );\n};\n\nexport default TomatoItem;\n","import React from \"react\";\nimport { ITomato } from \"./Tomatoes\";\nimport { Dictionary } from \"lodash\";\nimport TomatoItem from \"./TomatoItem\";\n\nimport \"./TomatoList.scss\";\nimport { format } from \"date-fns\";\n\ninterface ITomatoListProps {\n  finishedTomatoes: Dictionary<ITomato[]>;\n}\n\nconst TomatoList: React.FC<ITomatoListProps> = ({ finishedTomatoes }) => {\n  const dates: Array<keyof Dictionary<ITomato[]>> = Object.keys(\n    finishedTomatoes\n  )\n    .sort((a, b) => Date.parse(b) - Date.parse(a))\n    .splice(0, 3);\n\n  return (\n    <div className=\"TomatoList\">\n      {dates.map(date => {\n        const tomatoes = finishedTomatoes[date];\n        return (\n          <div key={date}>\n            <div className=\"title\">\n              <span className=\"date\">\n                {format(new Date(date), \"yyyy年MM月dd日\")}\n              </span>\n              <span className=\"count\">完成{tomatoes.length}个番茄任务</span>\n            </div>\n            {tomatoes.map(tomato => (\n              <TomatoItem key={tomato.id} tomato={tomato} />\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TomatoList;\n","import { connect } from \"react-redux\";\nimport Tomatoes from \"../../Tomatoes/Tomatoes\";\nimport { addTomato, initTomatoes, updateTomato } from \"../actions/tomatoes\";\n\nconst mapStateToProps = (state = { tomatoes: [] }, ownProps = {}) => {\n  return {\n    tomatoes: state.tomatoes,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  addTomato,\n  initTomatoes,\n  updateTomato\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);\n","import { ITomato } from \"../../Tomatoes/Tomatoes\";\nimport { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"./actionTypes\";\n\nexport const addTomato = (tomato: ITomato) => {\n  return {\n    type: ADD_TOMATO,\n    payload: tomato\n  };\n};\n\nexport const initTomatoes = (tomatoes: ITomato[]) => {\n  return {\n    type: INIT_TOMATOES,\n    payload: tomatoes\n  };\n};\n\nexport const updateTomato = (tomato: ITomato) => {\n  return {\n    type: UPDATE_TOMATO,\n    payload: tomato\n  };\n};\n","import React from \"react\";\n\nimport \"./Logo.scss\";\nimport svg from \"../../static/logo.svg\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <span>\n        <img src={svg} alt=\"logo\" />\n      </span>\n      <span>土豆番茄</span>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { ITodo } from \"../Todos/Todos\";\nimport { Dictionary } from \"lodash\";\nimport { ITomato } from \"../Tomatoes/Tomatoes\";\nimport { Chart, Geom, Axis } from \"bizcharts\";\n\ninterface IPolygonProps {\n  data: Dictionary<ITodo[] | ITomato[]>;\n  totalFinishedCount: number;\n}\n\nconst Polygon: React.FC<IPolygonProps> = ({ data, totalFinishedCount }) => {\n  const dates = Object.keys(data).sort((a, b) => Date.parse(a) - Date.parse(b));\n  const chartData = dates.map(date => ({\n    date,\n    count: data[date].length || 0\n  }));\n\n  return (\n    <Chart\n      renderer=\"svg\"\n      className=\"Polygon\"\n      height={200}\n      width={330}\n      data={chartData}\n    >\n      <Axis name=\"date\" label={null} tickLine={null} />\n      <Axis name=\"count\" label={null} tickLine={null} />\n      <Geom\n        type=\"area\"\n        opacity={0.5}\n        position=\"date*count\"\n        color={[\"count\", \"rgba(215,78,78,0.5)\"]}\n      />\n    </Chart>\n  );\n};\n\nexport default Polygon;\n","import React from \"react\";\nimport { ITodo } from \"../Todos/Todos\";\nimport { format } from \"date-fns\";\nimport axios from \"../../config/axios\";\n\nimport \"./TodoHistoryItem.scss\";\n\ninterface ITodoHistoryItemProps extends ITodo {\n  updateTodo: (todo: ITodo) => {};\n  deleted: boolean;\n  finished: boolean;\n}\n\nconst TodoHistoryItem: React.FC<ITodoHistoryItemProps> = ({\n  description,\n  updated_at,\n  updateTodo,\n  deleted,\n  finished,\n  id\n}) => {\n  const updateTodoAsync = async (todo: ITodo) => {\n    try {\n      const response = await axios.put(`todos/${id}`, todo);\n      updateTodo(response.data.resource);\n    } catch (e) {\n      console.error(\"更新Todo失败\", e);\n    }\n  };\n\n  const FinishedAction = (\n    <div className=\"action\">\n      <span\n        onClick={() => {\n          updateTodoAsync({ finished: false });\n        }}\n      >\n        恢复\n      </span>\n      <span\n        onClick={() => {\n          updateTodoAsync({ deleted: true });\n        }}\n      >\n        删除\n      </span>\n    </div>\n  );\n\n  const DeletedAction = (\n    <div className=\"action\">\n      <span\n        onClick={() => {\n          updateTodoAsync({ deleted: false });\n        }}\n      >\n        恢复\n      </span>\n    </div>\n  );\n\n  return (\n    <div className=\"TodoHistoryItem\">\n      <div className=\"text\">\n        <span>{format(new Date(updated_at || 0), \"HH:MM\")}</span>\n        <span>{description}</span>\n      </div>\n\n      {deleted ? DeletedAction : \"\"}\n      {finished ? FinishedAction : \"\"}\n    </div>\n  );\n};\n\nexport default TodoHistoryItem;\n","import { connect } from \"react-redux\";\nimport TodoHistoryItem from \"../../Statistics/TodoHistoryItem\";\nimport { updateTodo } from \"./../actions/todos\";\n\nconst mapStateToProps = (state = {}, ownProps = {}) => {\n  return {\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  updateTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryItem);\n","import React from \"react\";\n\nimport { Dictionary } from \"lodash\";\nimport { ITodo } from \"../Todos/Todos\";\n\nimport \"./TodoHistoryList.scss\";\nimport { format } from \"date-fns\";\nimport TodoHistoryItemContainer from \"../redux/containers/TodoHistoryItemContainer\";\n\ninterface ITodoHistoryListProps {\n  dates: Array<keyof Dictionary<ITodo[]>>;\n  todos: Dictionary<ITodo[]>;\n  content: string;\n  deleted: boolean;\n  finished: boolean;\n}\n\nconst TodoHistoryList: React.FC<ITodoHistoryListProps> = ({\n  dates,\n  todos,\n  content,\n  deleted,\n  finished\n}) => {\n  const dayOfWeek = {\n    \"1\": \"周一\",\n    \"2\": \"周二\",\n    \"3\": \"周三\",\n    \"4\": \"周四\",\n    \"5\": \"周五\",\n    \"6\": \"周六\",\n    \"7\": \"周日\"\n  };\n\n  const isValidDay = (value: string): value is keyof typeof dayOfWeek =>\n    value in dayOfWeek;\n\n  const getDay = (date: Date) => {\n    const day = format(date, \"e\");\n    return isValidDay(day) ? dayOfWeek[day] : \"无法获取星期\";\n  };\n\n  return (\n    <>\n      {dates.map(date => (\n        <div key={date} className=\"TodoHistoryList\">\n          <div className=\"summary\">\n            <p className=\"date\">\n              <span>{format(new Date(date), \"MM月dd日\")}</span>\n              <span>{getDay(new Date(date))}</span>\n            </p>\n\n            <p className=\"finishedCount\">\n              {`${content} ${todos[date].length} 个番茄任务`}\n            </p>\n          </div>\n          <div className=\"content\">\n            {todos[date].map(todo => (\n              <TodoHistoryItemContainer\n                deleted={deleted}\n                finished={finished}\n                key={todo.id}\n                {...todo}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default TodoHistoryList;\n","import React from \"react\";\nimport { ITodo } from \"../Todos/Todos\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\n\nimport { Tabs } from \"antd\";\nimport \"./TodoHistory.scss\";\nimport TodoHistoryList from \"./TodoHistoryList\";\n\nconst { TabPane } = Tabs;\n\ninterface ITodoHistoryProps {\n  todos: ITodo[];\n}\n\nconst TodoHistory: React.FC<ITodoHistoryProps> = ({ todos }) => {\n  const finishedTodos = todos.filter(todo => {\n    return todo.completed && !todo.deleted;\n  });\n\n  const dailyFinishedTodos = groupBy(finishedTodos, todo =>\n    format(new Date(todo.completed_at || 0), \"yyyy-MM-dd\")\n  );\n\n  const deletedTodos = todos.filter(todo => todo.deleted);\n\n  const dailyDeletedTodos = groupBy(deletedTodos, todo =>\n    format(new Date(todo.updated_at || 0), \"yyyy-MM-dd\")\n  );\n\n  const finishedDates = Object.keys(dailyFinishedTodos).sort(\n    (a, b) => Date.parse(b) - Date.parse(a)\n  );\n\n  const deletedDates = Object.keys(dailyDeletedTodos).sort(\n    (a, b) => Date.parse(b) - Date.parse(a)\n  );\n\n  return (\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane tab=\"已完成任务\" key=\"1\">\n        <TodoHistoryList\n          deleted={false}\n          finished={true}\n          dates={finishedDates}\n          todos={dailyFinishedTodos}\n          content=\"完成\"\n        />\n      </TabPane>\n      <TabPane tab=\"已删除任务\" key=\"2\">\n        <TodoHistoryList\n          deleted={true}\n          finished={false}\n          dates={deletedDates}\n          todos={dailyDeletedTodos}\n          content=\"删除\"\n        />\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default TodoHistory;\n","import { connect } from \"react-redux\";\nimport TodoHistory from \"../../Statistics/TodoHistory\";\n\nconst mapStateToProps = (state = { todos: [] }, ownProps = {}) => {\n  return {\n    todos: state.todos,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(TodoHistory);\n","import React from \"react\";\n\nimport \"./Statistics.scss\";\nimport { ITodo } from \"../Todos/Todos\";\nimport Polygon from \"./Polygon\";\nimport { groupBy } from \"lodash\";\nimport { format } from \"date-fns\";\nimport TodoHistoryContainer from \"../redux/containers/TodoHistoryContainer\";\nimport { ITomato } from \"../Tomatoes/Tomatoes\";\n\ninterface IStatisticsProps {\n  todos: ITodo[];\n  tomatoes: ITomato[];\n}\n\nconst Statistics: React.FC<IStatisticsProps> = ({ todos, tomatoes }) => {\n  const finishedTodos = todos.filter(todo => todo.completed && !todo.deleted);\n  const dailyTodos = groupBy(finishedTodos, todo =>\n    format(new Date(todo.completed_at || 0), \"yyyy-MM-dd\")\n  );\n\n  const finishedTomatoes = tomatoes.filter(\n    tomato => tomato.ended_at && tomato.description\n  );\n\n  const dailyFinishedTomatoes = groupBy(finishedTomatoes, tomato =>\n    format(new Date(tomato.ended_at || 0), \"yyyy-MM-dd\")\n  );\n\n  return (\n    <div className=\"Statistics\">\n      <ul>\n        <li className=\"StatisticItem\">\n          <div className=\"title\">\n            <span>统计</span>\n            <span>一月累计</span>\n            <span>{finishedTomatoes.length}</span>\n          </div>\n          <div className=\"chart\">\n            <Polygon\n              data={dailyFinishedTomatoes}\n              totalFinishedCount={finishedTomatoes.length}\n            />\n          </div>\n        </li>\n        <li className=\"StatisticItem\">\n          <div className=\"title\">\n            <span>番茄历史</span>\n            <span>累计完成番茄</span>\n            <span>{finishedTomatoes.length}</span>\n          </div>\n          <div className=\"chart\">\n            <Polygon\n              data={dailyFinishedTomatoes}\n              totalFinishedCount={finishedTomatoes.length}\n            />\n          </div>\n        </li>\n        <li className=\"StatisticItem\">\n          <div className=\"title\">\n            <span>任务历史</span>\n            <span>累计完成任务</span>\n            <span>{finishedTodos.length}</span>\n          </div>\n          <div className=\"chart\">\n            <Polygon\n              data={dailyTodos}\n              totalFinishedCount={finishedTodos.length}\n            />\n          </div>\n        </li>\n      </ul>\n      <TodoHistoryContainer />\n    </div>\n  );\n};\n\nexport default Statistics;\n","import { connect } from \"react-redux\";\nimport Statistics from \"../../Statistics/Statistics\";\n\nconst mapStateToProps = (\n  state = { todos: [], tomatoes: [] },\n  ownProps = {}\n) => {\n  return {\n    todos: state.todos,\n    tomatoes: state.tomatoes,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(Statistics);\n","import React, { useEffect, useState } from \"react\";\n\nimport { Button, Icon } from \"antd\";\nimport { RouteChildrenProps } from \"react-router-dom\";\nimport axios from \"../../config/axios\";\n\nimport \"./Home.scss\";\nimport Todos from \"../redux/containers/TodosContainers\";\nimport Tomatoes from \"../redux/containers/TomatoesContainers\";\nimport Logo from \"./Logo\";\nimport Statistics from \"../redux/containers/StatisticsContainer\";\n\nconst Home = (props: RouteChildrenProps) => {\n  const [account, setAccount] = useState(\"\");\n\n  const logout = () => {\n    localStorage.setItem(\"x-token\", \"\");\n    props.history.push(\"/login\");\n  };\n\n  useEffect(() => {\n    const getMe = async () => {\n      let response;\n      try {\n        response = await axios.get(\"me\");\n        setAccount(response.data.account || \"\");\n      } catch (e) {\n        console.error(\"获取用户信息失败\", e);\n      }\n    };\n\n    getMe();\n  }, [account, props.history]);\n\n  return (\n    <div className=\"Home\">\n      <header className=\"header\">\n        <Logo />\n        <span className=\"logout\">\n          {account && `欢迎，${account}`}\n          <Button onClick={logout} size=\"small\" type=\"danger\">\n            <Icon type=\"logout\" />\n            登出\n          </Button>\n        </span>\n      </header>\n      <main>\n        <Tomatoes></Tomatoes>\n        <Todos></Todos>\n      </main>\n      <Statistics />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Input, Icon, Button } from \"antd\";\nimport axios from \"../../config/axios\";\nimport { RouteChildrenProps, Link } from \"react-router-dom\";\n\nimport \"./Login.scss\";\n\nconst Login = (props: RouteChildrenProps) => {\n  const [account, setAccount] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submit = async () => {\n    const URL = \"sign_in/user\";\n    try {\n      await axios.post(URL, {\n        account,\n        password\n      });\n\n      props.history.push(\"/\");\n    } catch (error) {\n      console.error(\"用户登录失败\");\n    }\n  };\n\n  return (\n    <div className=\"Login\" id=\"Login\">\n      <h1>土豆番茄闹钟-登录</h1>\n      <Input.Group>\n        <Input\n          placeholder=\"请输入用户名\"\n          prefix={<Icon type=\"user\" />}\n          value={account}\n          onChange={e => {\n            setAccount(e.target.value || \"\");\n          }}\n        />\n        <Input.Password\n          placeholder=\"请输入密码\"\n          prefix={<Icon type=\"lock\" />}\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value || \"\");\n          }}\n        />\n      </Input.Group>\n\n      <Button block type=\"primary\" onClick={submit}>\n        登录\n      </Button>\n      <p>\n        如果没有账号，<Link to=\"/signUp\">现在注册</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, ChangeEvent } from \"react\";\nimport { Input, Icon, Button } from \"antd\";\nimport axios from \"../../config/axios\";\nimport { RouteChildrenProps, Link } from \"react-router-dom\";\n\nimport \"./SignUp.scss\";\n\nconst SignUp = (props: RouteChildrenProps) => {\n  const [account, setAccount] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const onChangeAccount = (e: ChangeEvent<HTMLInputElement>) => {\n    setAccount(e.target.value || \"\");\n  };\n  const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value || \"\");\n  };\n  const onChangePasswordConfirmation = (e: ChangeEvent<HTMLInputElement>) => {\n    setPasswordConfirmation(e.target.value || \"\");\n  };\n\n  const submit = async () => {\n    const URL = \"sign_up/user\";\n    try {\n      await axios.post(URL, {\n        account,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n\n      props.history.push(\"/\");\n    } catch (error) {\n      console.error(\"提交注册用户密码失败\");\n    }\n  };\n\n  return (\n    <div className=\"SignUp\" id=\"SignUp\">\n      <h1>土豆番茄闹钟-注册</h1>\n      <Input.Group compact={true}>\n        <Input\n          placeholder=\"请输入用户名\"\n          prefix={<Icon type=\"user\" />}\n          value={account}\n          onChange={onChangeAccount}\n        />\n        <Input.Password\n          placeholder=\"请输入密码\"\n          prefix={<Icon type=\"lock\" />}\n          value={password}\n          onChange={onChangePassword}\n        />\n        <Input.Password\n          placeholder=\"请确认密码\"\n          prefix={<Icon type=\"lock\" />}\n          value={passwordConfirmation}\n          onChange={onChangePasswordConfirmation}\n        />\n      </Input.Group>\n      <Button block type=\"primary\" onClick={submit}>\n        注册\n      </Button>\n      <p>\n        如果已有账号，请<Link to=\"login\">登录</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router, Route } from \"react-router-dom\";\n\nimport history from \"./config/history\";\n\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/SignUp/SignUp\";\n\nconst App = () => {\n  return (\n    <Router history={history}>\n      {/* index */}\n      <Route exact path=\"/\" component={Home}></Route>\n      {/* login */}\n      <Route path=\"/login\" component={Login}></Route>\n      {/* signUp */}\n      <Route path=\"/signUp\" component={SignUp}></Route>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_TODO,\n  INIT_TODOS,\n  UPDATE_TODO,\n  EDIT_TODO\n} from \"../actions/actionTypes\";\nimport { ITodo } from \"../../Todos/Todos\";\nimport { Reducer } from \"react\";\n\nconst todos: Reducer<ITodo[], any> = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, action.payload];\n    case INIT_TODOS:\n      return [...action.payload];\n    case UPDATE_TODO:\n      return state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return action.payload;\n        }\n        return todo;\n      });\n    case EDIT_TODO:\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo, editing: true };\n        }\n        return { ...todo, editing: false };\n      });\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import {\n  ADD_TOMATO,\n  INIT_TOMATOES,\n  UPDATE_TOMATO\n} from \"../actions/actionTypes\";\nimport { ITomato } from \"../../Tomatoes/Tomatoes\";\n\nconst tomatoes = (state: ITomato[] = [], action: any) => {\n  switch (action.type) {\n    case ADD_TOMATO:\n      return [...state, action.payload];\n    case INIT_TOMATOES:\n      return [...action.payload];\n    case UPDATE_TOMATO:\n      return state.map(tomato => {\n        if (tomato.id === action.payload.id) {\n          return action.payload;\n        }\n        return tomato;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default tomatoes;\n","import { combineReducers } from \"redux\";\n\nimport todos from \"./todos\";\nimport tomatoes from \"./tomatoes\";\n\nexport default combineReducers({ todos, tomatoes });\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\n\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(reducers, devToolsEnhancer({ name: \"name\" }));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./components/redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}